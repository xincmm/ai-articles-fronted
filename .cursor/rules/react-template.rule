# React 19 + Vite + Tailwind + ShadcN Template Rules

description: "Rules for modern React template using React 19, Vite, Tailwind CSS v4, ShadcN UI, React Router v7 and TanStack Query"

files: ["**/*.{ts,tsx,js,jsx}"]

rules:
  - When writing or modifying code, follow these guidelines:
    - Use React 19 features and best practices
    - Follow Vite's recommended configurations
    - Utilize Tailwind CSS v4 utility classes for styling
    - Implement ShadcN UI components following their design system
    - Use React Router v7 for routing implementation
    - Use TanStack Query (React Query) for API data management
    
  - Code Style:
    - Use TypeScript for type safety
    - Prefer functional components over class components
    - Use modern React hooks and patterns
    - Follow ESLint and Prettier configurations
    
  - Project Structure:
    - Keep components in /src/components
    - Store routes in /src/routes
    - Place layouts in /src/layouts
    - Manage global states in /src/store
    - Keep utilities in /src/utils
    - Organize API queries in /src/queries
    
  - Performance:
    - Implement code splitting where appropriate
    - Use React.lazy() for route-based code splitting
    - Follow Vite's optimization guidelines
    - Leverage TanStack Query's caching capabilities
    
  - Component Guidelines:
    - Create reusable and modular components
    - Use ShadcN UI components for consistent UI
    - Implement proper prop types/interfaces
    - Follow accessibility best practices

  - API Data Management:
    - Use TanStack Query hooks for data fetching
    - Implement proper error handling with TanStack Query
    - Utilize query invalidation for data updates
    - Follow TanStack Query best practices for caching
    - Organize queries by feature or resource type
    - Use proper TypeScript types for query responses

references:
  - "@file:package.json"
  - "@file:vite.config.ts"
  - "@file:tsconfig.node.json" 